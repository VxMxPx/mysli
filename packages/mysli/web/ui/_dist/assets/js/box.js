// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  mysli.web.ui.box = (function(_super) {
    var template, ui;

    __extends(box, _super);

    ui = mysli.web.ui;

    template = '<div class="ui-box ui-widget"></div>';

    function box(options) {
      var row;
      box.__super__.constructor.apply(this, arguments);
      this.elements.push($(template));
      this.orientation = options.orientation || ui["const"].HORIZONTAL;
      if (this.orientation === ui["const"].VERTICAL) {
        row = $('<div class="row" />');
        this.get_element().append(row);
        this.container.master = this.container.target = row;
      } else {
        this.container.master = this.container.target = this.get_element();
      }
    }


    /*
    Add widget to the box
    @param {object}  widget
    @param {boolean} expand weather cell should expand to max width / height
    @returns {integer} id
     */

    box.prototype.push = function(widget, expand) {
      var expanded, method, target, wrapper;
      if (expand == null) {
        expand = false;
      }
      expanded = expand ? 'expanded' : 'collapsed';
      if (this.orientation === ui["const"].HORIZONTAL) {
        wrapper = $("<div class=\"row " + expanded + "\"><div class=\"cell\" /></div>");
        target = wrapper.find('.cell');
      } else {
        wrapper = $("<div class=\"cell " + expanded + "\" />");
        target = wrapper;
      }
      method = 'append';
      this.container.master[method](wrapper);
      this.container.target = target;
      return box.__super__.push.call(this, widget);
    };

    return box;

  })(mysli.web.ui.container);

}).call(this);
